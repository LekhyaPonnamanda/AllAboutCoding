#include <stdio.h>
#define MAX_SIZE 100

int arr[MAX_SIZE];
int top1 = -1; // top pointer for stack 1
int top2 = MAX_SIZE; // top pointer for stack 2

void push1(int x)
{
    if (top1 < top2 - 1)
    {
        top1++;
        arr[top1] = x;
    }
    else
    {
        printf("Stack Overflow\n");
    }
}

void push2(int x)
{
    if (top1 < top2 - 1)
    {
        top2--;
        arr[top2] = x;
    }
    else
    {
        printf("Stack Overflow\n");
    }
}

void pop1()
{
    if (top1 == -1)
    {
        printf("Stack Underflow\n");
    }
    else
    {
        int x = arr[top1];
        top1--;
        printf("Popped element from Stack 1: %d\n", x);
    }
}

void pop2()
{
    if (top2 == MAX_SIZE)
    {
        printf("Stack Underflow\n");
    }
    else
    {
        int x = arr[top2];
        top2++;
        printf("Popped element from Stack 2: %d\n", x);
    }
}

void display1()
{
    if (top1 == -1)
    {
        printf("Stack 1 is empty\n");
    }
    else
    {
        printf("Elements of Stack 1 are: ");
        for (int i = 0; i <= top1; i++)
        {
            printf("%d ", arr[i]);
        }
        printf("\n");
    }
}

void display2()
{
    if (top2 == MAX_SIZE)
    {
        printf("Stack 2 is empty\n");
    }
    else
    {
        printf("Elements of Stack 2 are: ");
        for (int i = MAX_SIZE - 1; i >= top2; i--)
        {
            printf("%d ", arr[i]);
        }
        printf("\n");
    }
}

int main()
{
    push1(10);
    push2(20);
    push1(30);
    push2(40);
    display1();
    display2();
    pop1();
    pop2();
    display1();
    display2();
    return 0;
}
